{"ast":null,"code":"import { BehaviorSubject, EMPTY, concatMap, from, switchMap } from 'rxjs';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\nclass CartService {\n  constructor(http, authService) {\n    this.http = http;\n    this.authService = authService;\n    this.apiUrlForShoppingCart = 'http://localhost:8000/api/purchases/shoppingcart';\n    this.apiUrlForProducts = 'http://localhost:8000/api/products/get-product/';\n    this.shoppingCart = new BehaviorSubject({\n      shoppingCart_id: '',\n      shoppingCart_created_at: '',\n      shoppingCart_updated_at: '',\n      shoppingCart_items: [],\n      shoppingCart_user_id: ''\n    });\n    this.shoppingCart$ = this.shoppingCart.asObservable();\n    this.shoppingCartAmount = new BehaviorSubject(0);\n    this.shoppingCartAmount$ = this.shoppingCartAmount.asObservable();\n    this.currentAmount = 0;\n    this.getItemsFromShoppingCart();\n    this.getAmountOfItemsOnCart();\n  }\n  getItemsFromShoppingCart() {\n    const refreshToken = this.authService.getRefreshToken();\n    if (refreshToken) {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${refreshToken}`\n      });\n      const itemsFromCart = this.http.get(`${this.apiUrlForShoppingCart}/get-items-from-cart`, {\n        headers\n      });\n      itemsFromCart.subscribe(data => {\n        this.shoppingCart.next(data);\n      });\n    }\n    return EMPTY;\n  }\n  addToCart(itemId) {\n    const refreshToken = this.authService.getRefreshToken();\n    if (refreshToken) {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${refreshToken}`\n      });\n      return this.http.post(`${this.apiUrlForShoppingCart}/add`, {\n        items: itemId\n      }, {\n        headers\n      }).subscribe(data => {\n        // console.log(data)\n        this.getItemsFromShoppingCart();\n      });\n    }\n    return null;\n  }\n  getFullItemsOnCart() {\n    return this.shoppingCart$.pipe(switchMap(data => {\n      let items = data.shoppingCart_items;\n      return from(items).pipe(concatMap(itemId => {\n        const url = `${this.apiUrlForProducts}${itemId}`;\n        return this.http.get(url);\n      }));\n    }));\n  }\n  getAmountOfItemsOnCart() {\n    this.getFullItemsOnCart().subscribe(data => {\n      console.log(data);\n      let aver = [];\n      aver.push(data);\n      aver.forEach(resp => {\n        console.log(resp);\n      });\n    });\n  }\n  ngOnDestroy() {\n    this.shoppingCart.unsubscribe();\n  }\n}\nCartService.ɵfac = function CartService_Factory(t) {\n  return new (t || CartService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n};\nCartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CartService,\n  factory: CartService.ɵfac,\n  providedIn: 'root'\n});\nexport { CartService };","map":{"version":3,"names":["BehaviorSubject","EMPTY","concatMap","from","switchMap","HttpHeaders","CartService","constructor","http","authService","apiUrlForShoppingCart","apiUrlForProducts","shoppingCart","shoppingCart_id","shoppingCart_created_at","shoppingCart_updated_at","shoppingCart_items","shoppingCart_user_id","shoppingCart$","asObservable","shoppingCartAmount","shoppingCartAmount$","currentAmount","getItemsFromShoppingCart","getAmountOfItemsOnCart","refreshToken","getRefreshToken","headers","itemsFromCart","get","subscribe","data","next","addToCart","itemId","post","items","getFullItemsOnCart","pipe","url","console","log","aver","push","forEach","resp","ngOnDestroy","unsubscribe","i0","ɵɵinject","i1","HttpClient","i2","AuthService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\josed\\Escritorio\\WebDev\\1 ANGULAR\\frontEcommerceAngular\\src\\app\\services\\cart.service.ts"],"sourcesContent":["import { Injectable, OnInit } from '@angular/core';\nimport { BehaviorSubject, EMPTY, Observable, concatMap, forkJoin, from, switchMap, tap } from 'rxjs';\nimport { AuthService } from './auth.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n  private apiUrlForShoppingCart = 'http://localhost:8000/api/purchases/shoppingcart'\n\n  private apiUrlForProducts = 'http://localhost:8000/api/products/get-product/'\n\n  constructor(private http: HttpClient, private authService: AuthService) {\n    this.getItemsFromShoppingCart()\n    this.getAmountOfItemsOnCart()\n  }\n\n  private shoppingCart: BehaviorSubject<ShoppingCart> = new BehaviorSubject<ShoppingCart>({\n    shoppingCart_id: '',\n    shoppingCart_created_at: '',\n    shoppingCart_updated_at: '',\n    shoppingCart_items: [],\n    shoppingCart_user_id: ''\n  });\n\n  shoppingCart$ = this.shoppingCart.asObservable()\n\n  private shoppingCartAmount: BehaviorSubject<any> = new BehaviorSubject<any>(0);\n\n  shoppingCartAmount$ = this.shoppingCartAmount.asObservable()\n\n  currentAmount: number = 0\n\n  getItemsFromShoppingCart(): Observable<ShoppingCart> {\n    const refreshToken = this.authService.getRefreshToken();\n    if (refreshToken) {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${refreshToken}`\n      });\n      const itemsFromCart = this.http.get<ShoppingCart>(`${this.apiUrlForShoppingCart}/get-items-from-cart`, { headers })\n      itemsFromCart.subscribe((data: ShoppingCart) => {\n        this.shoppingCart.next(data);\n      })\n    }\n    return EMPTY\n  }\n\n  addToCart(itemId: string) {\n    const refreshToken = this.authService.getRefreshToken();\n    if (refreshToken) {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${refreshToken}`\n      });\n      return this.http.post<any>(`${this.apiUrlForShoppingCart}/add`, { items: itemId }, { headers }).subscribe(data => {\n        // console.log(data)\n        this.getItemsFromShoppingCart()\n      })\n    }\n    return null\n  }\n\n  getFullItemsOnCart(): Observable<any[]> {\n    return this.shoppingCart$.pipe(\n      switchMap(data => {\n        let items = data.shoppingCart_items;\n        return from(items).pipe(\n          concatMap(itemId => {\n            const url = `${this.apiUrlForProducts}${itemId}`;\n            return this.http.get(url);\n          })\n        ) as Observable<any[]>;\n      })\n    );\n  }\n  \n  getAmountOfItemsOnCart() {\n    this.getFullItemsOnCart().subscribe((data: any)=>{\n      console.log(data)\n      let aver = []\n      aver.push(data);\n      aver.forEach((resp: any)=>{\n        console.log(resp)\n      })\n    })\n  }\n\n  \nngOnDestroy() {\n  this.shoppingCart.unsubscribe()\n}\n\n}\n\n\ninterface ShoppingCart {\n  shoppingCart_id: string;\n  shoppingCart_created_at: string;\n  shoppingCart_updated_at: string;\n  shoppingCart_items: string[];\n  shoppingCart_user_id: string;\n}"],"mappings":"AACA,SAASA,eAAe,EAAEC,KAAK,EAAcC,SAAS,EAAYC,IAAI,EAAEC,SAAS,QAAa,MAAM;AAEpG,SAAqBC,WAAW,QAAQ,sBAAsB;;;;AAE9D,MAGaC,WAAW;EAMtBC,YAAoBC,IAAgB,EAAUC,WAAwB;IAAlD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,WAAW,GAAXA,WAAW;IAJjD,KAAAC,qBAAqB,GAAG,kDAAkD;IAE1E,KAAAC,iBAAiB,GAAG,iDAAiD;IAOrE,KAAAC,YAAY,GAAkC,IAAIZ,eAAe,CAAe;MACtFa,eAAe,EAAE,EAAE;MACnBC,uBAAuB,EAAE,EAAE;MAC3BC,uBAAuB,EAAE,EAAE;MAC3BC,kBAAkB,EAAE,EAAE;MACtBC,oBAAoB,EAAE;KACvB,CAAC;IAEF,KAAAC,aAAa,GAAG,IAAI,CAACN,YAAY,CAACO,YAAY,EAAE;IAExC,KAAAC,kBAAkB,GAAyB,IAAIpB,eAAe,CAAM,CAAC,CAAC;IAE9E,KAAAqB,mBAAmB,GAAG,IAAI,CAACD,kBAAkB,CAACD,YAAY,EAAE;IAE5D,KAAAG,aAAa,GAAW,CAAC;IAlBvB,IAAI,CAACC,wBAAwB,EAAE;IAC/B,IAAI,CAACC,sBAAsB,EAAE;EAC/B;EAkBAD,wBAAwBA,CAAA;IACtB,MAAME,YAAY,GAAG,IAAI,CAAChB,WAAW,CAACiB,eAAe,EAAE;IACvD,IAAID,YAAY,EAAE;MAChB,MAAME,OAAO,GAAG,IAAItB,WAAW,CAAC;QAC9B,eAAe,EAAE,UAAUoB,YAAY;OACxC,CAAC;MACF,MAAMG,aAAa,GAAG,IAAI,CAACpB,IAAI,CAACqB,GAAG,CAAe,GAAG,IAAI,CAACnB,qBAAqB,sBAAsB,EAAE;QAAEiB;MAAO,CAAE,CAAC;MACnHC,aAAa,CAACE,SAAS,CAAEC,IAAkB,IAAI;QAC7C,IAAI,CAACnB,YAAY,CAACoB,IAAI,CAACD,IAAI,CAAC;MAC9B,CAAC,CAAC;;IAEJ,OAAO9B,KAAK;EACd;EAEAgC,SAASA,CAACC,MAAc;IACtB,MAAMT,YAAY,GAAG,IAAI,CAAChB,WAAW,CAACiB,eAAe,EAAE;IACvD,IAAID,YAAY,EAAE;MAChB,MAAME,OAAO,GAAG,IAAItB,WAAW,CAAC;QAC9B,eAAe,EAAE,UAAUoB,YAAY;OACxC,CAAC;MACF,OAAO,IAAI,CAACjB,IAAI,CAAC2B,IAAI,CAAM,GAAG,IAAI,CAACzB,qBAAqB,MAAM,EAAE;QAAE0B,KAAK,EAAEF;MAAM,CAAE,EAAE;QAAEP;MAAO,CAAE,CAAC,CAACG,SAAS,CAACC,IAAI,IAAG;QAC/G;QACA,IAAI,CAACR,wBAAwB,EAAE;MACjC,CAAC,CAAC;;IAEJ,OAAO,IAAI;EACb;EAEAc,kBAAkBA,CAAA;IAChB,OAAO,IAAI,CAACnB,aAAa,CAACoB,IAAI,CAC5BlC,SAAS,CAAC2B,IAAI,IAAG;MACf,IAAIK,KAAK,GAAGL,IAAI,CAACf,kBAAkB;MACnC,OAAOb,IAAI,CAACiC,KAAK,CAAC,CAACE,IAAI,CACrBpC,SAAS,CAACgC,MAAM,IAAG;QACjB,MAAMK,GAAG,GAAG,GAAG,IAAI,CAAC5B,iBAAiB,GAAGuB,MAAM,EAAE;QAChD,OAAO,IAAI,CAAC1B,IAAI,CAACqB,GAAG,CAACU,GAAG,CAAC;MAC3B,CAAC,CAAC,CACkB;IACxB,CAAC,CAAC,CACH;EACH;EAEAf,sBAAsBA,CAAA;IACpB,IAAI,CAACa,kBAAkB,EAAE,CAACP,SAAS,CAAEC,IAAS,IAAG;MAC/CS,OAAO,CAACC,GAAG,CAACV,IAAI,CAAC;MACjB,IAAIW,IAAI,GAAG,EAAE;MACbA,IAAI,CAACC,IAAI,CAACZ,IAAI,CAAC;MACfW,IAAI,CAACE,OAAO,CAAEC,IAAS,IAAG;QACxBL,OAAO,CAACC,GAAG,CAACI,IAAI,CAAC;MACnB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAGFC,WAAWA,CAAA;IACT,IAAI,CAAClC,YAAY,CAACmC,WAAW,EAAE;EACjC;;AAnFazC,WAAW,C;mBAAXA,WAAW,EAAA0C,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,WAAA;AAAA;AAAX/C,WAAW,C;SAAXA,WAAW;EAAAgD,OAAA,EAAXhD,WAAW,CAAAiD,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPlD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}