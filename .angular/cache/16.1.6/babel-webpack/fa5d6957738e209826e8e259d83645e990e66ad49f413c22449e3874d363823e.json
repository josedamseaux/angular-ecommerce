{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { combineLatest, map } from 'rxjs';\nlet PaymentSuccessComponent = class PaymentSuccessComponent {\n  constructor(http, cartService) {\n    this.http = http;\n    this.cartService = cartService;\n  }\n  ngOnInit() {\n    this.addPurchaseToDb();\n    const sessionId = localStorage.getItem('sessionId');\n    if (sessionId) {\n      // El sessionId está presente en el almacenamiento local\n      // console.log('Session ID:', sessionId);\n      this.getPaymentStatus(sessionId);\n    } else {\n      // El sessionId no está presente en el almacenamiento local\n      // console.log('Session ID no encontrado.');\n    }\n  }\n  getPaymentStatus(sessionId) {\n    const apiUrl = 'http://localhost:8000/api/payments/get-payment-status'; // Cambia la URL según tu configuración\n    const data = {\n      sessionId: sessionId\n    };\n    return this.http.post(apiUrl, data).subscribe(response => {\n      this.paymentStatus = response.payment_status;\n      console.log(response);\n      if (response.payment_status === 'paid') {\n        // this.addPurchaseToDb()\n        // localStorage.removeItem('sessionId');\n      } else {\n        this.messageForPayment = '¡Lo sentimos! Hubo un problema con el pago';\n      }\n    });\n  }\n  addPurchaseToDb() {\n    const urlForPurchase = 'http://localhost:8000/api/purchases/new-purchase';\n    combineLatest([this.cartService.shoppingCart$, this.cartService.shoppingCartAmount$]).pipe(map(([shoppingCart, shoppingCartAmount]) => {\n      return {\n        products: shoppingCart.shoppingCart_items,\n        total: shoppingCartAmount\n      };\n    })).subscribe(data => {\n      console.log(data);\n      const headers = this.cartService.getHeadersAndToken();\n      if (headers) {\n        return this.http.post(urlForPurchase, {\n          data\n        }, {\n          headers\n        }).subscribe(resp => {\n          console.log(resp);\n        });\n      }\n      return null;\n    });\n  }\n};\nPaymentSuccessComponent = __decorate([Component({\n  selector: 'app-payment-success',\n  templateUrl: './payment-success.component.html',\n  styleUrls: ['./payment-success.component.css']\n})], PaymentSuccessComponent);\nexport { PaymentSuccessComponent };","map":{"version":3,"names":["Component","combineLatest","map","PaymentSuccessComponent","constructor","http","cartService","ngOnInit","addPurchaseToDb","sessionId","localStorage","getItem","getPaymentStatus","apiUrl","data","post","subscribe","response","paymentStatus","payment_status","console","log","messageForPayment","urlForPurchase","shoppingCart$","shoppingCartAmount$","pipe","shoppingCart","shoppingCartAmount","products","shoppingCart_items","total","headers","getHeadersAndToken","resp","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\josed\\Escritorio\\WebDev\\1 ANGULAR\\frontEcommerceAngular\\src\\app\\components\\payment-success\\payment-success.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { combineLatest, map } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { CartService } from 'src/app/services/cart.service';\n\n@Component({\n  selector: 'app-payment-success',\n  templateUrl: './payment-success.component.html',\n  styleUrls: ['./payment-success.component.css']\n})\nexport class PaymentSuccessComponent implements OnInit {\n  sessionId: string | undefined;\n  paymentStatus: string | undefined;\n  messageForPayment: string | undefined;\n\n  constructor(private http: HttpClient, private cartService: CartService) { }\n\n  ngOnInit(): void {\n    this.addPurchaseToDb()\n    const sessionId = localStorage.getItem('sessionId');\n\n    if (sessionId) {\n      // El sessionId está presente en el almacenamiento local\n      // console.log('Session ID:', sessionId);\n      this.getPaymentStatus(sessionId);\n\n    } else {\n      // El sessionId no está presente en el almacenamiento local\n      // console.log('Session ID no encontrado.');\n    }\n  }\n\n  getPaymentStatus(sessionId: string) {\n    const apiUrl = 'http://localhost:8000/api/payments/get-payment-status'; // Cambia la URL según tu configuración\n\n    const data = { sessionId: sessionId };\n\n    return this.http.post(apiUrl, data).subscribe((response: any) => {\n      this.paymentStatus = response.payment_status;\n      console.log(response)\n      if (response.payment_status === 'paid') {\n        // this.addPurchaseToDb()\n        // localStorage.removeItem('sessionId');\n      } else {\n        this.messageForPayment = '¡Lo sentimos! Hubo un problema con el pago'\n      }\n    });\n  }\n\n  addPurchaseToDb() {\n\n    const urlForPurchase = 'http://localhost:8000/api/purchases/new-purchase'\n\n    combineLatest([this.cartService.shoppingCart$, this.cartService.shoppingCartAmount$]).pipe(\n      map(([shoppingCart, shoppingCartAmount]) => {\n        return {\n          products: shoppingCart.shoppingCart_items,\n          total: shoppingCartAmount\n        };\n      })\n    ).subscribe(data => {\n      console.log(data);\n\n      const headers = this.cartService.getHeadersAndToken()\n\n      if (headers) {\n        return this.http.post(urlForPurchase, { data }, { headers }).subscribe(resp => {\n          console.log(resp)\n        })\n      }\n      return null\n    });\n\n\n\n\n\n\n  }\n\n\n\n}"],"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAASC,aAAa,EAAEC,GAAG,QAAQ,MAAM;AASzC,IAAaC,uBAAuB,GAApC,MAAaA,uBAAuB;EAKlCC,YAAoBC,IAAgB,EAAUC,WAAwB;IAAlD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,WAAW,GAAXA,WAAW;EAAiB;EAE1EC,QAAQA,CAAA;IACN,IAAI,CAACC,eAAe,EAAE;IACtB,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAEnD,IAAIF,SAAS,EAAE;MACb;MACA;MACA,IAAI,CAACG,gBAAgB,CAACH,SAAS,CAAC;KAEjC,MAAM;MACL;MACA;IAAA;EAEJ;EAEAG,gBAAgBA,CAACH,SAAiB;IAChC,MAAMI,MAAM,GAAG,uDAAuD,CAAC,CAAC;IAExE,MAAMC,IAAI,GAAG;MAAEL,SAAS,EAAEA;IAAS,CAAE;IAErC,OAAO,IAAI,CAACJ,IAAI,CAACU,IAAI,CAACF,MAAM,EAAEC,IAAI,CAAC,CAACE,SAAS,CAAEC,QAAa,IAAI;MAC9D,IAAI,CAACC,aAAa,GAAGD,QAAQ,CAACE,cAAc;MAC5CC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;MACrB,IAAIA,QAAQ,CAACE,cAAc,KAAK,MAAM,EAAE;QACtC;QACA;MAAA,CACD,MAAM;QACL,IAAI,CAACG,iBAAiB,GAAG,4CAA4C;;IAEzE,CAAC,CAAC;EACJ;EAEAd,eAAeA,CAAA;IAEb,MAAMe,cAAc,GAAG,kDAAkD;IAEzEtB,aAAa,CAAC,CAAC,IAAI,CAACK,WAAW,CAACkB,aAAa,EAAE,IAAI,CAAClB,WAAW,CAACmB,mBAAmB,CAAC,CAAC,CAACC,IAAI,CACxFxB,GAAG,CAAC,CAAC,CAACyB,YAAY,EAAEC,kBAAkB,CAAC,KAAI;MACzC,OAAO;QACLC,QAAQ,EAAEF,YAAY,CAACG,kBAAkB;QACzCC,KAAK,EAAEH;OACR;IACH,CAAC,CAAC,CACH,CAACZ,SAAS,CAACF,IAAI,IAAG;MACjBM,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;MAEjB,MAAMkB,OAAO,GAAG,IAAI,CAAC1B,WAAW,CAAC2B,kBAAkB,EAAE;MAErD,IAAID,OAAO,EAAE;QACX,OAAO,IAAI,CAAC3B,IAAI,CAACU,IAAI,CAACQ,cAAc,EAAE;UAAET;QAAI,CAAE,EAAE;UAAEkB;QAAO,CAAE,CAAC,CAAChB,SAAS,CAACkB,IAAI,IAAG;UAC5Ed,OAAO,CAACC,GAAG,CAACa,IAAI,CAAC;QACnB,CAAC,CAAC;;MAEJ,OAAO,IAAI;IACb,CAAC,CAAC;EAOJ;CAID;AAxEY/B,uBAAuB,GAAAgC,UAAA,EALnCnC,SAAS,CAAC;EACToC,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,C,EACWnC,uBAAuB,CAwEnC;SAxEYA,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}