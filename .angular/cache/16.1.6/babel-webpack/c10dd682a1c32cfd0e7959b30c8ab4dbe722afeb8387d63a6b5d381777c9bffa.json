{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-cookie-service\";\nclass AuthService {\n  constructor(http, cookieService) {\n    this.http = http;\n    this.cookieService = cookieService;\n    this.accessTokenKey = 'access_token';\n    this.refreshTokenKey = 'refresh_token';\n    this.user = 'user';\n    this.urlLogin = 'http://localhost:8000/api/auth/login';\n    this.urlRegister = 'http://localhost:8000/api/users/register';\n    this.urlLogout = 'http://localhost:8000/api/auth/logout';\n  }\n  login(user) {\n    localStorage.setItem(this.user, JSON.stringify(user));\n    return this.http.post(this.urlLogin, user);\n  }\n  register(user) {\n    return this.http.post(this.urlRegister, user);\n  }\n  saveTokens(accessToken, refreshToken) {\n    this.cookieService.set(this.accessTokenKey, accessToken, undefined, '/', undefined, true, 'Strict');\n    this.cookieService.set(this.accessTokenKey, accessToken, undefined, '/', undefined, true, 'Strict');\n    this.cookieService.set(this.refreshTokenKey, refreshToken, undefined, '/', undefined, true, 'Strict');\n  }\n  getAccessToken() {\n    return this.cookieService.get(this.accessTokenKey);\n  }\n  getRefreshToken() {\n    return this.cookieService.get(this.refreshTokenKey);\n  }\n  clearTokens() {\n    this.cookieService.delete(this.accessTokenKey, '/');\n    this.cookieService.delete(this.refreshTokenKey, '/');\n  }\n  logout() {\n    const accessToken = this.cookieService.get(this.accessTokenKey);\n    this.clearTokens();\n    if (accessToken) {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${accessToken}`\n      });\n      return this.http.get(this.urlLogout, {\n        headers\n      });\n    } else {\n      return throwError(() => new Error('No se encontró el token de acceso'));\n    }\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.CookieService));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthService };","map":{"version":3,"names":["HttpHeaders","throwError","AuthService","constructor","http","cookieService","accessTokenKey","refreshTokenKey","user","urlLogin","urlRegister","urlLogout","login","localStorage","setItem","JSON","stringify","post","register","saveTokens","accessToken","refreshToken","set","undefined","getAccessToken","get","getRefreshToken","clearTokens","delete","logout","headers","Error","i0","ɵɵinject","i1","HttpClient","i2","CookieService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\josed\\Escritorio\\WebDev\\1 ANGULAR\\frontEcommerceAngular\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, tap, throwError } from 'rxjs';\nimport { CookieService } from 'ngx-cookie-service';\nimport { UserInterface } from '../interfaces/user.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private accessTokenKey = 'access_token';\n  private refreshTokenKey = 'refresh_token';\n  private user = 'user';\n\n  constructor(private http: HttpClient, private cookieService: CookieService) { }\n  \n  urlLogin = 'http://localhost:8000/api/auth/login';\n  urlRegister = 'http://localhost:8000/api/users/register';\n  urlLogout = 'http://localhost:8000/api/auth/logout';\n  \n  login(user: any): Observable<any> {\n    localStorage.setItem(this.user, JSON.stringify(user));\n    return this.http.post(this.urlLogin, user);\n  }\n\n  register(user: UserInterface): Observable<any> {\n    return this.http.post(this.urlRegister, user);\n  }\n\n  saveTokens(accessToken: string, refreshToken: string) {\n    this.cookieService.set(this.accessTokenKey, accessToken, undefined, '/', undefined, true, 'Strict');\n    this.cookieService.set(this.accessTokenKey, accessToken, undefined, '/', undefined, true, 'Strict');\n    this.cookieService.set(this.refreshTokenKey, refreshToken, undefined, '/', undefined, true, 'Strict');\n  }\n\n  getAccessToken(): string | null {\n    return this.cookieService.get(this.accessTokenKey);\n  }\n\n  getRefreshToken(): string | null {\n    return this.cookieService.get(this.refreshTokenKey);\n  }\n\n  clearTokens() {\n    this.cookieService.delete(this.accessTokenKey, '/');\n    this.cookieService.delete(this.refreshTokenKey, '/');\n  }\n\n  logout() {\n    const accessToken = this.cookieService.get(this.accessTokenKey);\n\n    this.clearTokens();\n\n    if (accessToken) {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${accessToken}`\n      });\n      return this.http.get(this.urlLogout, { headers });\n    } else {\n      return throwError(() => new Error('No se encontró el token de acceso'));\n    }\n  }\n}"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAA0BC,UAAU,QAAQ,MAAM;;;;AAIlD,MAGaC,WAAW;EAKtBC,YAAoBC,IAAgB,EAAUC,aAA4B;IAAtD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,aAAa,GAAbA,aAAa;IAJnD,KAAAC,cAAc,GAAG,cAAc;IAC/B,KAAAC,eAAe,GAAG,eAAe;IACjC,KAAAC,IAAI,GAAG,MAAM;IAIrB,KAAAC,QAAQ,GAAG,sCAAsC;IACjD,KAAAC,WAAW,GAAG,0CAA0C;IACxD,KAAAC,SAAS,GAAG,uCAAuC;EAJ2B;EAM9EC,KAAKA,CAACJ,IAAS;IACbK,YAAY,CAACC,OAAO,CAAC,IAAI,CAACN,IAAI,EAAEO,IAAI,CAACC,SAAS,CAACR,IAAI,CAAC,CAAC;IACrD,OAAO,IAAI,CAACJ,IAAI,CAACa,IAAI,CAAC,IAAI,CAACR,QAAQ,EAAED,IAAI,CAAC;EAC5C;EAEAU,QAAQA,CAACV,IAAmB;IAC1B,OAAO,IAAI,CAACJ,IAAI,CAACa,IAAI,CAAC,IAAI,CAACP,WAAW,EAAEF,IAAI,CAAC;EAC/C;EAEAW,UAAUA,CAACC,WAAmB,EAAEC,YAAoB;IAClD,IAAI,CAAChB,aAAa,CAACiB,GAAG,CAAC,IAAI,CAAChB,cAAc,EAAEc,WAAW,EAAEG,SAAS,EAAE,GAAG,EAAEA,SAAS,EAAE,IAAI,EAAE,QAAQ,CAAC;IACnG,IAAI,CAAClB,aAAa,CAACiB,GAAG,CAAC,IAAI,CAAChB,cAAc,EAAEc,WAAW,EAAEG,SAAS,EAAE,GAAG,EAAEA,SAAS,EAAE,IAAI,EAAE,QAAQ,CAAC;IACnG,IAAI,CAAClB,aAAa,CAACiB,GAAG,CAAC,IAAI,CAACf,eAAe,EAAEc,YAAY,EAAEE,SAAS,EAAE,GAAG,EAAEA,SAAS,EAAE,IAAI,EAAE,QAAQ,CAAC;EACvG;EAEAC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACnB,aAAa,CAACoB,GAAG,CAAC,IAAI,CAACnB,cAAc,CAAC;EACpD;EAEAoB,eAAeA,CAAA;IACb,OAAO,IAAI,CAACrB,aAAa,CAACoB,GAAG,CAAC,IAAI,CAAClB,eAAe,CAAC;EACrD;EAEAoB,WAAWA,CAAA;IACT,IAAI,CAACtB,aAAa,CAACuB,MAAM,CAAC,IAAI,CAACtB,cAAc,EAAE,GAAG,CAAC;IACnD,IAAI,CAACD,aAAa,CAACuB,MAAM,CAAC,IAAI,CAACrB,eAAe,EAAE,GAAG,CAAC;EACtD;EAEAsB,MAAMA,CAAA;IACJ,MAAMT,WAAW,GAAG,IAAI,CAACf,aAAa,CAACoB,GAAG,CAAC,IAAI,CAACnB,cAAc,CAAC;IAE/D,IAAI,CAACqB,WAAW,EAAE;IAElB,IAAIP,WAAW,EAAE;MACf,MAAMU,OAAO,GAAG,IAAI9B,WAAW,CAAC;QAC9B,eAAe,EAAE,UAAUoB,WAAW;OACvC,CAAC;MACF,OAAO,IAAI,CAAChB,IAAI,CAACqB,GAAG,CAAC,IAAI,CAACd,SAAS,EAAE;QAAEmB;MAAO,CAAE,CAAC;KAClD,MAAM;MACL,OAAO7B,UAAU,CAAC,MAAM,IAAI8B,KAAK,CAAC,mCAAmC,CAAC,CAAC;;EAE3E;;AApDW7B,WAAW,C;mBAAXA,WAAW,EAAA8B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,aAAA;AAAA;AAAXnC,WAAW,C;SAAXA,WAAW;EAAAoC,OAAA,EAAXpC,WAAW,CAAAqC,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPtC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}