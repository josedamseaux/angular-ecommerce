{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet PaymentSuccessComponent = class PaymentSuccessComponent {\n  constructor(http, authService) {\n    this.http = http;\n    this.authService = authService;\n  }\n  ngOnInit() {\n    const sessionId = localStorage.getItem('sessionId');\n    if (sessionId) {\n      // El sessionId está presente en el almacenamiento local\n      console.log('Session ID:', sessionId);\n      this.getPaymentStatus(sessionId);\n    } else {\n      // El sessionId no está presente en el almacenamiento local\n      console.log('Session ID no encontrado.');\n    }\n  }\n  getPaymentStatus(sessionId) {\n    const apiUrl = 'http://localhost:8000/api/payments/get-payment-status'; // Cambia la URL según tu configuración\n    const data = {\n      sessionId: sessionId\n    };\n    return this.http.post(apiUrl, data).subscribe(response => {\n      this.paymentStatus = response.payment_status;\n      console.log(response);\n      if (response.payment_status === 'paid') {\n        // this.goToSuccesPage()\n        // this.clearCartAfterSuccessfullPurchase()\n        this.addPurchaseToDb();\n        localStorage.removeItem('sessionId');\n      } else {\n        this.messageForPayment = '¡Lo sentimos! Hubo un problema con el pago';\n      }\n    });\n  }\n  addPurchaseToDb() {\n    const urlForPurchase = 'http://localhost:8000/api/purchases/new-purchase';\n    //   users_purchase: any = {\n    //     user: '',\n    //     purchase: '',\n    //     shippingAddress: '',\n    //     status: '',\n    //     additionalInfo: '',\n    // };\n    this.authService.g;\n    this.http.post(urlForPurchase, {\n      data\n    }, {\n      headers\n    });\n  }\n};\nPaymentSuccessComponent = __decorate([Component({\n  selector: 'app-payment-success',\n  templateUrl: './payment-success.component.html',\n  styleUrls: ['./payment-success.component.css']\n})], PaymentSuccessComponent);\nexport { PaymentSuccessComponent };","map":{"version":3,"names":["Component","PaymentSuccessComponent","constructor","http","authService","ngOnInit","sessionId","localStorage","getItem","console","log","getPaymentStatus","apiUrl","data","post","subscribe","response","paymentStatus","payment_status","addPurchaseToDb","removeItem","messageForPayment","urlForPurchase","g","headers","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\josed\\Escritorio\\WebDev\\1 ANGULAR\\frontEcommerceAngular\\src\\app\\components\\payment-success\\payment-success.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-payment-success',\n  templateUrl: './payment-success.component.html',\n  styleUrls: ['./payment-success.component.css']\n})\nexport class PaymentSuccessComponent implements OnInit {\n  sessionId: string | undefined;\n  paymentStatus: string | undefined;\n  messageForPayment: string | undefined;\n\n  constructor(private http: HttpClient, private authService: Cart) { }\n\n  ngOnInit(): void {\n\n    const sessionId = localStorage.getItem('sessionId');\n\n    if (sessionId) {\n      // El sessionId está presente en el almacenamiento local\n      console.log('Session ID:', sessionId);\n      this.getPaymentStatus(sessionId);\n\n    } else {\n      // El sessionId no está presente en el almacenamiento local\n      console.log('Session ID no encontrado.');\n    }\n  }\n\n  getPaymentStatus(sessionId: string) {\n    const apiUrl = 'http://localhost:8000/api/payments/get-payment-status'; // Cambia la URL según tu configuración\n    \n    const data = { sessionId: sessionId };\n\n    return this.http.post(apiUrl, data).subscribe((response: any) => {\n      this.paymentStatus = response.payment_status;\n      console.log(response)\n      if (response.payment_status === 'paid') {\n        // this.goToSuccesPage()\n        // this.clearCartAfterSuccessfullPurchase()\n\n        this.addPurchaseToDb()\n        localStorage.removeItem('sessionId');\n      } else {\n        this.messageForPayment = '¡Lo sentimos! Hubo un problema con el pago'\n      }\n    });\n  }\n\n  addPurchaseToDb(){\n\n    const urlForPurchase = 'http://localhost:8000/api/purchases/new-purchase'\n\n  //   users_purchase: any = {\n  //     user: '',\n  //     purchase: '',\n  //     shippingAddress: '',\n  //     status: '',\n  //     additionalInfo: '',\n  // };\n\n  this.authService.g\n\n  this.http.post(urlForPurchase, {data}, {headers})\n\n  \n\n\n\n\n  }\n\n\n\n}"],"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AASjD,IAAaC,uBAAuB,GAApC,MAAaA,uBAAuB;EAKlCC,YAAoBC,IAAgB,EAAUC,WAAiB;IAA3C,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,WAAW,GAAXA,WAAW;EAAU;EAEnEC,QAAQA,CAAA;IAEN,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAEnD,IAAIF,SAAS,EAAE;MACb;MACAG,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEJ,SAAS,CAAC;MACrC,IAAI,CAACK,gBAAgB,CAACL,SAAS,CAAC;KAEjC,MAAM;MACL;MACAG,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;;EAE5C;EAEAC,gBAAgBA,CAACL,SAAiB;IAChC,MAAMM,MAAM,GAAG,uDAAuD,CAAC,CAAC;IAExE,MAAMC,IAAI,GAAG;MAAEP,SAAS,EAAEA;IAAS,CAAE;IAErC,OAAO,IAAI,CAACH,IAAI,CAACW,IAAI,CAACF,MAAM,EAAEC,IAAI,CAAC,CAACE,SAAS,CAAEC,QAAa,IAAI;MAC9D,IAAI,CAACC,aAAa,GAAGD,QAAQ,CAACE,cAAc;MAC5CT,OAAO,CAACC,GAAG,CAACM,QAAQ,CAAC;MACrB,IAAIA,QAAQ,CAACE,cAAc,KAAK,MAAM,EAAE;QACtC;QACA;QAEA,IAAI,CAACC,eAAe,EAAE;QACtBZ,YAAY,CAACa,UAAU,CAAC,WAAW,CAAC;OACrC,MAAM;QACL,IAAI,CAACC,iBAAiB,GAAG,4CAA4C;;IAEzE,CAAC,CAAC;EACJ;EAEAF,eAAeA,CAAA;IAEb,MAAMG,cAAc,GAAG,kDAAkD;IAE3E;IACA;IACA;IACA;IACA;IACA;IACA;IAEA,IAAI,CAAClB,WAAW,CAACmB,CAAC;IAElB,IAAI,CAACpB,IAAI,CAACW,IAAI,CAACQ,cAAc,EAAE;MAACT;IAAI,CAAC,EAAE;MAACW;IAAO,CAAC,CAAC;EAOjD;CAID;AAnEYvB,uBAAuB,GAAAwB,UAAA,EALnCzB,SAAS,CAAC;EACT0B,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,C,EACW3B,uBAAuB,CAmEnC;SAnEYA,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}