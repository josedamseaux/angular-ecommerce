{"ast":null,"code":"import { combineLatest, map, of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/services/cart.service\";\nimport * as i3 from \"@angular/router\";\nclass PaymentSuccessComponent {\n  constructor(http, cartService) {\n    this.http = http;\n    this.cartService = cartService;\n  }\n  ngOnInit() {\n    this.addPurchaseToDb();\n    const sessionId = localStorage.getItem('sessionId');\n    if (sessionId) {\n      // El sessionId está presente en el almacenamiento local\n      // console.log('Session ID:', sessionId);\n      // this.getPaymentStatus(sessionId);\n      this.sessionId = sessionId;\n    } else {\n      // El sessionId no está presente en el almacenamiento local\n      // console.log('Session ID no encontrado.');\n    }\n  }\n  getPaymentStatus() {\n    const apiUrl = 'http://localhost:8000/api/payments/get-payment-status';\n    const data = {\n      sessionId: this.sessionId\n    };\n    const refreshToken = this.authService.getRefreshToken();\n    if (refreshToken) {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${refreshToken}`\n      });\n      if (headers) {\n        return this.http.post(apiUrl, data, {\n          headers\n        }).subscribe(response => {\n          this.paymentStatus = response.payment_status;\n          console.log(response);\n          if (response.payment_status === 'paid') {\n            // this.addPurchaseToDb()\n            // localStorage.removeItem('sessionId');\n          } else {\n            this.messageForPayment = '¡Lo sentimos! Hubo un problema con el pago';\n          }\n        });\n      }\n      // Devolver un observable vacío en caso de que no haya headers válidos\n      return of();\n    }\n    addPurchaseToDb();\n    {\n      const urlForPurchase = 'http://localhost:8000/api/purchases/new-purchase';\n      combineLatest([this.cartService.shoppingCart$, this.cartService.shoppingCartAmount$]).pipe(map(([shoppingCart, shoppingCartAmount]) => {\n        return {\n          products: shoppingCart.shoppingCart_items,\n          total: shoppingCartAmount\n        };\n      })).subscribe(data => {\n        console.log(data);\n        const headers = this.cartService.getHeadersAndToken();\n        if (headers) {\n          return this.http.post(urlForPurchase, {\n            data\n          }, {\n            headers\n          }).subscribe(resp => {\n            console.log(resp);\n          });\n        }\n        return null;\n      });\n    }\n  }\n}\nPaymentSuccessComponent.ɵfac = function PaymentSuccessComponent_Factory(t) {\n  return new (t || PaymentSuccessComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.CartService));\n};\nPaymentSuccessComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PaymentSuccessComponent,\n  selectors: [[\"app-payment-success\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[\"routerLink\", \"/cart\", 1, \"btn\", \"btn-secondary\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"]],\n  template: function PaymentSuccessComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"button\", 0);\n      i0.ɵɵtext(3, \" Volver al carrito \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function PaymentSuccessComponent_Template_button_click_4_listener() {\n        return ctx.getPaymentStatus();\n      });\n      i0.ɵɵtext(5, \"Get payments staus \");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.messageForPayment, \"\");\n    }\n  },\n  dependencies: [i3.RouterLink],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { PaymentSuccessComponent };","map":{"version":3,"names":["combineLatest","map","of","PaymentSuccessComponent","constructor","http","cartService","ngOnInit","addPurchaseToDb","sessionId","localStorage","getItem","getPaymentStatus","apiUrl","data","refreshToken","authService","getRefreshToken","headers","HttpHeaders","post","subscribe","response","paymentStatus","payment_status","console","log","messageForPayment","urlForPurchase","shoppingCart$","shoppingCartAmount$","pipe","shoppingCart","shoppingCartAmount","products","shoppingCart_items","total","getHeadersAndToken","resp","i0","ɵɵdirectiveInject","i1","HttpClient","i2","CartService","selectors","decls","vars","consts","template","PaymentSuccessComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","PaymentSuccessComponent_Template_button_click_4_listener","ɵɵadvance","ɵɵtextInterpolate1"],"sources":["C:\\Users\\josed\\Escritorio\\WebDev\\1 ANGULAR\\frontEcommerceAngular\\src\\app\\components\\payment-success\\payment-success.component.ts","C:\\Users\\josed\\Escritorio\\WebDev\\1 ANGULAR\\frontEcommerceAngular\\src\\app\\components\\payment-success\\payment-success.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { EMPTY, combineLatest, map, of } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { CartService } from 'src/app/services/cart.service';\n\n@Component({\n  selector: 'app-payment-success',\n  templateUrl: './payment-success.component.html',\n  styleUrls: ['./payment-success.component.css']\n})\nexport class PaymentSuccessComponent implements OnInit {\n  sessionId: string | undefined;\n  paymentStatus: string | undefined;\n  messageForPayment: string | undefined;\n\n  constructor(private http: HttpClient, private cartService: CartService) { }\n\n  ngOnInit(): void {\n    this.addPurchaseToDb()\n    const sessionId = localStorage.getItem('sessionId');\n\n    if (sessionId) {\n      // El sessionId está presente en el almacenamiento local\n      // console.log('Session ID:', sessionId);\n      // this.getPaymentStatus(sessionId);\n      this.sessionId = sessionId\n\n    } else {\n      // El sessionId no está presente en el almacenamiento local\n      // console.log('Session ID no encontrado.');\n    }\n  }\n\n  getPaymentStatus() {\n    const apiUrl = 'http://localhost:8000/api/payments/get-payment-status';\n  \n    const data = { sessionId: this.sessionId };\n  \n    const refreshToken = this.authService.getRefreshToken();\n    if (refreshToken) {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${refreshToken}`\n      });\n  \n    if (headers) {\n      return this.http.post(apiUrl, data, { headers }).subscribe((response: any) => {\n        this.paymentStatus = response.payment_status;\n        console.log(response)\n        if (response.payment_status === 'paid') {\n          // this.addPurchaseToDb()\n          // localStorage.removeItem('sessionId');\n        } else {\n          this.messageForPayment = '¡Lo sentimos! Hubo un problema con el pago'\n        }\n      });\n    }\n    // Devolver un observable vacío en caso de que no haya headers válidos\n    return of();\n  }\n  \n\n  addPurchaseToDb() {\n\n    const urlForPurchase = 'http://localhost:8000/api/purchases/new-purchase'\n\n    combineLatest([this.cartService.shoppingCart$, this.cartService.shoppingCartAmount$]).pipe(\n      map(([shoppingCart, shoppingCartAmount]) => {\n        return {\n          products: shoppingCart.shoppingCart_items,\n          total: shoppingCartAmount\n        };\n      })\n    ).subscribe(data => {\n      console.log(data);\n\n      const headers = this.cartService.getHeadersAndToken()\n\n      if (headers) {\n        return this.http.post(urlForPurchase, { data }, { headers }).subscribe(resp => {\n          console.log(resp)\n        })\n      }\n      return null\n    });\n\n\n\n\n\n\n  }\n\n\n\n}","<p> {{messageForPayment}}</p>\n<button class=\"btn btn-secondary\" routerLink=\"/cart\"> Volver al carrito </button>\n\n\n<button class=\"btn btn-secondary\" (click)=\"getPaymentStatus()\">Get payments staus </button>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}