{"ast":null,"code":"import { BehaviorSubject, EMPTY, forkJoin, of, switchMap } from 'rxjs';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\nclass CartService {\n  constructor(http, authService) {\n    this.http = http;\n    this.authService = authService;\n    this.apiUrlForShoppingCart = 'http://localhost:8000/api/purchases/shoppingcart';\n    this.apiUrlForProducts = 'http://localhost:8000/api/products/get-product/';\n    this.shoppingCart = new BehaviorSubject({\n      shoppingCart_id: '',\n      shoppingCart_created_at: '',\n      shoppingCart_updated_at: '',\n      shoppingCart_items: [],\n      shoppingCart_user_id: ''\n    });\n    this.shoppingCart$ = this.shoppingCart.asObservable();\n    this.shoppingCartAmount = new BehaviorSubject(0);\n    this.shoppingCartAmount$ = this.shoppingCartAmount.asObservable();\n    this.currentAmount = 0;\n    this.getIdsFromItemsFromShoppingCart();\n  }\n  getIdsFromItemsFromShoppingCart() {\n    const refreshToken = this.authService.getRefreshToken();\n    if (refreshToken) {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${refreshToken}`\n      });\n      const itemsFromCart = this.http.get(`${this.apiUrlForShoppingCart}/get-items-from-cart`, {\n        headers\n      });\n      itemsFromCart.subscribe(data => {\n        this.shoppingCart.next(data);\n        this.getAmountOfItemsOnCart();\n      });\n    }\n    return EMPTY;\n  }\n  getItemsOnCart() {\n    return this.shoppingCart$.pipe(switchMap(data => {\n      console.log(data);\n      if (data == null) {\n        return of([]);\n      }\n      let items = data.shoppingCart_items;\n      const observables = items.map(itemId => {\n        const url = `${this.apiUrlForProducts}${itemId}`;\n        return this.http.get(url);\n      });\n      return forkJoin(observables);\n    }));\n  }\n  addToCart(itemId) {\n    const refreshToken = this.authService.getRefreshToken();\n    if (refreshToken) {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${refreshToken}`\n      });\n      return this.http.post(`${this.apiUrlForShoppingCart}/add`, {\n        items: itemId\n      }, {\n        headers\n      }).subscribe(data => {\n        console.log(data);\n        this.getIdsFromItemsFromShoppingCart();\n      });\n    }\n    return null;\n  }\n  getAmountOfItemsOnCart() {\n    this.getItemsOnCart().subscribe(data => {\n      if (data === null) {\n        this.shoppingCartAmount.next(0);\n      }\n      const sum = data.reduce((total, item) => total + item.totalAmount, 0);\n      this.shoppingCartAmount.next(sum);\n    });\n  }\n  deleteItemInCart(id) {\n    this.http.put(`${this.apiUrlForShoppingCart}/delete/:id`, {\n      id: itemId\n    });\n  }\n  ngOnDestroy() {\n    this.shoppingCart.unsubscribe();\n  }\n}\nCartService.ɵfac = function CartService_Factory(t) {\n  return new (t || CartService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n};\nCartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CartService,\n  factory: CartService.ɵfac,\n  providedIn: 'root'\n});\nexport { CartService };","map":{"version":3,"names":["BehaviorSubject","EMPTY","forkJoin","of","switchMap","HttpHeaders","CartService","constructor","http","authService","apiUrlForShoppingCart","apiUrlForProducts","shoppingCart","shoppingCart_id","shoppingCart_created_at","shoppingCart_updated_at","shoppingCart_items","shoppingCart_user_id","shoppingCart$","asObservable","shoppingCartAmount","shoppingCartAmount$","currentAmount","getIdsFromItemsFromShoppingCart","refreshToken","getRefreshToken","headers","itemsFromCart","get","subscribe","data","next","getAmountOfItemsOnCart","getItemsOnCart","pipe","console","log","items","observables","map","itemId","url","addToCart","post","sum","reduce","total","item","totalAmount","deleteItemInCart","id","put","ngOnDestroy","unsubscribe","i0","ɵɵinject","i1","HttpClient","i2","AuthService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\josed\\Escritorio\\WebDev\\1 ANGULAR\\frontEcommerceAngular\\src\\app\\services\\cart.service.ts"],"sourcesContent":["import { Injectable, OnInit } from '@angular/core';\nimport { BehaviorSubject, EMPTY, Observable, concatMap, forkJoin, from, of, switchMap, tap } from 'rxjs';\nimport { AuthService } from './auth.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n  private apiUrlForShoppingCart = 'http://localhost:8000/api/purchases/shoppingcart'\n\n  private apiUrlForProducts = 'http://localhost:8000/api/products/get-product/'\n\n  constructor(private http: HttpClient, private authService: AuthService) {\n    this.getIdsFromItemsFromShoppingCart()\n  }\n\n  private shoppingCart: BehaviorSubject<ShoppingCart> = new BehaviorSubject<ShoppingCart>({\n    shoppingCart_id: '',\n    shoppingCart_created_at: '',\n    shoppingCart_updated_at: '',\n    shoppingCart_items: [],\n    shoppingCart_user_id: ''\n  });\n\n  shoppingCart$ = this.shoppingCart.asObservable()\n\n  private shoppingCartAmount: BehaviorSubject<any> = new BehaviorSubject<any>(0);\n\n  shoppingCartAmount$ = this.shoppingCartAmount.asObservable()\n\n  currentAmount: number = 0\n\n  getIdsFromItemsFromShoppingCart(): Observable<ShoppingCart> {\n    const refreshToken = this.authService.getRefreshToken();\n    if (refreshToken) {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${refreshToken}`\n      });\n      const itemsFromCart = this.http.get<ShoppingCart>(`${this.apiUrlForShoppingCart}/get-items-from-cart`, { headers })\n      itemsFromCart.subscribe((data: ShoppingCart) => {\n        this.shoppingCart.next(data);\n        this.getAmountOfItemsOnCart()\n\n      })\n    }\n    return EMPTY\n  }\n\n  getItemsOnCart(): Observable<any[]> {\n    return this.shoppingCart$.pipe(\n      switchMap(data => {\n        console.log(data)\n        if (data == null) {\n          return of([])\n        }\n        let items = data.shoppingCart_items;\n        const observables: Observable<any>[] = items.map(itemId => {\n          const url = `${this.apiUrlForProducts}${itemId}`;\n          return this.http.get(url);\n        });\n        return forkJoin(observables);\n      })\n    );\n  }\n\n  addToCart(itemId: string) {\n    const refreshToken = this.authService.getRefreshToken();\n    if (refreshToken) {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${refreshToken}`\n      });\n      return this.http.post<any>(`${this.apiUrlForShoppingCart}/add`, { items: itemId }, { headers }).subscribe(data => {\n        console.log(data)\n        this.getIdsFromItemsFromShoppingCart()\n      })\n    }\n    return null\n  }\n\n  getAmountOfItemsOnCart() {\n    this.getItemsOnCart().subscribe((data: any[]) => {\n      if (data === null) {\n        this.shoppingCartAmount.next(0);\n      }\n      const sum = data.reduce((total, item) => total + item.totalAmount, 0);\n      this.shoppingCartAmount.next(sum);\n    });\n  }\n\n  deleteItemInCart(id: string){\n    this.http.put(`${this.apiUrlForShoppingCart}/delete/:id`, { id: itemId } )\n  }\n\n  ngOnDestroy() {\n    this.shoppingCart.unsubscribe()\n  }\n\n}\n\n\ninterface ShoppingCart {\n  shoppingCart_id: string;\n  shoppingCart_created_at: string;\n  shoppingCart_updated_at: string;\n  shoppingCart_items: string[];\n  shoppingCart_user_id: string;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}