{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject, Subject, catchError, tap, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\nclass ProductService {\n  constructor(http, authService) {\n    this.http = http;\n    this.authService = authService;\n    this.apiUrl = 'http://localhost:8000/api/products'; // URL de tu backend de NestJS\n    this.productsSubject = new BehaviorSubject([]);\n    this.products$ = this.productsSubject.asObservable();\n    this.productChangedSubject = new Subject();\n  }\n  // HTTP METHODS\n  // Método GET para obtener productos desde el backend\n  getProducts() {\n    return this.http.get(this.apiUrl + '/all').pipe(tap(response => {\n      console.log(response);\n      // Actualizar el valor del BehaviorSubject con los productos recibidos\n      this.productsSubject.next(response.products);\n    }));\n  }\n  // Metodo POST para que el admin añada @adminuser123456 productos\n  addProduct(product, file) {\n    const refreshToken = this.authService.getAccessToken();\n    if (refreshToken) {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${refreshToken}`\n      });\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('productName', product.productName);\n      formData.append('description', product.description);\n      formData.append('totalAmount', product.totalAmount);\n      formData.append('quantity', product.quantity);\n      return this.http.post(`${this.apiUrl}/new-product`, formData, {\n        headers\n      }).pipe(tap(() => {\n        console.log('Producto agregado exitosamente');\n        this.productChangedSubject.next();\n      }), catchError(error => {\n        return throwError(() => error);\n      }));\n    } else {\n      return throwError(() => new Error('No se encontró el token de acceso'));\n    }\n  }\n  onProductChange() {\n    return this.productChangedSubject.asObservable();\n  }\n  deleteItem(i) {\n    console.log(this.apiUrl + '/delete/' + i.id);\n    return this.http.delete(this.apiUrl + '/delete/' + i.id).subscribe(data => {\n      console.log(data);\n      this.productChangedSubject.next();\n    });\n  }\n  // TOOLS\n  arrayBufferToBase64(buffer) {\n    let binary = '';\n    const bytes = new Uint8Array(buffer);\n    const len = bytes.byteLength;\n    for (let i = 0; i < len; i++) {\n      binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa(binary);\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});\nexport { ProductService };","map":{"version":3,"names":["HttpHeaders","BehaviorSubject","Subject","catchError","tap","throwError","ProductService","constructor","http","authService","apiUrl","productsSubject","products$","asObservable","productChangedSubject","getProducts","get","pipe","response","console","log","next","products","addProduct","product","file","refreshToken","getAccessToken","headers","formData","FormData","append","productName","description","totalAmount","quantity","post","error","Error","onProductChange","deleteItem","i","id","delete","subscribe","data","arrayBufferToBase64","buffer","binary","bytes","Uint8Array","len","byteLength","String","fromCharCode","window","btoa","i0","ɵɵinject","i1","HttpClient","i2","AuthService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\josed\\Escritorio\\WebDev\\1 ANGULAR\\frontEcommerceAngular\\src\\app\\services\\product.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject, catchError, map, tap, throwError } from 'rxjs';\nimport { AuthService } from './auth.service';\nimport { ProductInterface } from '../interfaces/product.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  \n  private apiUrl = 'http://localhost:8000/api/products'; // URL de tu backend de NestJS\n\n  private productsSubject: BehaviorSubject<ProductInterface[]> = new BehaviorSubject<ProductInterface[]>([]);\n  public products$: Observable<ProductInterface[]> = this.productsSubject.asObservable();\n  private productChangedSubject: Subject<void> = new Subject<void>();\n\n  constructor(private http: HttpClient, private authService: AuthService) { }\n\n  // HTTP METHODS\n  // Método GET para obtener productos desde el backend\n  getProducts(): Observable<any[]> {\n    return this.http.get<any[]>(this.apiUrl + '/all').pipe(\n      tap((response: any) => {\n        console.log(response)\n        // Actualizar el valor del BehaviorSubject con los productos recibidos\n        this.productsSubject.next(response.products);\n      }))\n  }\n\n  // Metodo POST para que el admin añada @adminuser123456 productos\n  addProduct(product: any, file: File): Observable<string> {\n    const refreshToken = this.authService.getAccessToken();\n    if (refreshToken) {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${refreshToken}`\n      });\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('productName', product.productName);\n      formData.append('description', product.description);\n      formData.append('totalAmount', product.totalAmount);\n      formData.append('quantity', product.quantity);\n      return this.http.post<any>(`${this.apiUrl}/new-product`, formData, { headers }).pipe(\n        tap(() => {\n          console.log('Producto agregado exitosamente');\n          this.productChangedSubject.next();\n        }),\n        catchError((error: any) => {\n          return throwError(() => error);\n        })\n      )\n    } else {\n      return throwError(() => new Error('No se encontró el token de acceso'));\n    }\n  }\n\n  onProductChange(): Observable<void> {\n    return this.productChangedSubject.asObservable();\n  }\n\n  deleteItem(i: any){\n    console.log(this.apiUrl + '/delete/' + i.id)\n    return this.http.delete<any>(this.apiUrl + '/delete/' + i.id).subscribe(data=>{\n      console.log(data)\n      this.productChangedSubject.next();\n    })\n  }\n\n  // TOOLS\n  arrayBufferToBase64(buffer: ArrayBuffer) {\n    let binary = '';\n    const bytes = new Uint8Array(buffer);\n    const len = bytes.byteLength;\n    for (let i = 0; i < len; i++) {\n      binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa(binary);\n  }\n\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}