{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet PaymentSuccessComponent = class PaymentSuccessComponent {\n  constructor(route, http) {\n    this.route = route;\n    this.http = http;\n  }\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      this.sessionId = params['sessionId'];\n      if (this.sessionId) {\n        this.getPaymentStatus(this.sessionId);\n      }\n    });\n  }\n  getPaymentStatus(sessionId) {\n    const apiUrl = 'http://localhost:3000/payments/get-payment-status'; // Cambia la URL según tu configuración\n    const data = {\n      sessionId: sessionId\n    };\n    this.http.post(apiUrl, data).subscribe(response => {\n      this.paymentStatus = response.payment_status;\n    });\n  }\n};\nPaymentSuccessComponent = __decorate([Component({\n  selector: 'app-payment-success',\n  templateUrl: './payment-success.component.html',\n  styleUrls: ['./payment-success.component.css']\n})], PaymentSuccessComponent);\nexport { PaymentSuccessComponent };","map":{"version":3,"names":["Component","PaymentSuccessComponent","constructor","route","http","ngOnInit","queryParams","subscribe","params","sessionId","getPaymentStatus","apiUrl","data","post","response","paymentStatus","payment_status","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\josed\\Escritorio\\WebDev\\1 ANGULAR\\frontEcommerceAngular\\src\\app\\components\\payment-success\\payment-success.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-payment-success',\n  templateUrl: './payment-success.component.html',\n  styleUrls: ['./payment-success.component.css']\n})\nexport class PaymentSuccessComponent implements OnInit {\n  sessionId: string;\n  paymentStatus: string;\n\n  constructor(private route: ActivatedRoute, private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(params => {\n      this.sessionId = params['sessionId'];\n\n      if (this.sessionId) {\n        this.getPaymentStatus(this.sessionId);\n      }\n    });\n  }\n\n  getPaymentStatus(sessionId: string): void {\n    const apiUrl = 'http://localhost:3000/payments/get-payment-status'; // Cambia la URL según tu configuración\n    const data = { sessionId: sessionId };\n\n    this.http.post(apiUrl, data).subscribe((response: any) => {\n      this.paymentStatus = response.payment_status;\n    });\n  }\n}"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOzC,IAAaC,uBAAuB,GAApC,MAAaA,uBAAuB;EAIlCC,YAAoBC,KAAqB,EAAUC,IAAgB;IAA/C,KAAAD,KAAK,GAALA,KAAK;IAA0B,KAAAC,IAAI,GAAJA,IAAI;EAAgB;EAEvEC,QAAQA,CAAA;IACN,IAAI,CAACF,KAAK,CAACG,WAAW,CAACC,SAAS,CAACC,MAAM,IAAG;MACxC,IAAI,CAACC,SAAS,GAAGD,MAAM,CAAC,WAAW,CAAC;MAEpC,IAAI,IAAI,CAACC,SAAS,EAAE;QAClB,IAAI,CAACC,gBAAgB,CAAC,IAAI,CAACD,SAAS,CAAC;;IAEzC,CAAC,CAAC;EACJ;EAEAC,gBAAgBA,CAACD,SAAiB;IAChC,MAAME,MAAM,GAAG,mDAAmD,CAAC,CAAC;IACpE,MAAMC,IAAI,GAAG;MAAEH,SAAS,EAAEA;IAAS,CAAE;IAErC,IAAI,CAACL,IAAI,CAACS,IAAI,CAACF,MAAM,EAAEC,IAAI,CAAC,CAACL,SAAS,CAAEO,QAAa,IAAI;MACvD,IAAI,CAACC,aAAa,GAAGD,QAAQ,CAACE,cAAc;IAC9C,CAAC,CAAC;EACJ;CACD;AAxBYf,uBAAuB,GAAAgB,UAAA,EALnCjB,SAAS,CAAC;EACTkB,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,C,EACWnB,uBAAuB,CAwBnC;SAxBYA,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}