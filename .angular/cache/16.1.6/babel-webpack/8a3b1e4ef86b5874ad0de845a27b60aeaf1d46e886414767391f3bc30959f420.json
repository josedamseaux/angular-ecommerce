{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nclass PaymentSuccessComponent {\n  constructor(route, http) {\n    this.route = route;\n    this.http = http;\n  }\n  ngOnInit() {\n    // this.route.queryParams.subscribe(params => {\n    //   this.sessionId = params['sessionId'];\n    //   if (this.sessionId) {\n    //     this.getPaymentStatus(this.sessionId);\n    //   }\n    // });\n    const user = localStorage.getItem(\"username\");\n    console.log(user);\n    const sessionId = localStorage.getItem('sessionId');\n    if (sessionId) {\n      // El sessionId está presente en el almacenamiento local\n      console.log('Session ID:', sessionId);\n      this.getPaymentStatus(sessionId);\n    } else {\n      // El sessionId no está presente en el almacenamiento local\n      console.log('Session ID no encontrado.');\n    }\n  }\n  getPaymentStatus(sessionId) {\n    const apiUrl = 'http://localhost:8000/api/payments/get-payment-status'; // Cambia la URL según tu configuración\n    const data = {\n      sessionId: sessionId\n    };\n    return this.http.post(apiUrl, data).subscribe(response => {\n      this.paymentStatus = response.payment_status;\n      console.log(response);\n      if (response.payment_status === 'paid') {\n        // this.goToSuccesPage()\n        // this.clearCartAfterSuccessfullPurchase()\n        localStorage.removeItem('sessionId');\n      }\n    });\n  }\n}\nPaymentSuccessComponent.ɵfac = function PaymentSuccessComponent_Factory(t) {\n  return new (t || PaymentSuccessComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.HttpClient));\n};\nPaymentSuccessComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PaymentSuccessComponent,\n  selectors: [[\"app-payment-success\"]],\n  decls: 2,\n  vars: 0,\n  template: function PaymentSuccessComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"payment-success works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { PaymentSuccessComponent };","map":{"version":3,"names":["PaymentSuccessComponent","constructor","route","http","ngOnInit","user","localStorage","getItem","console","log","sessionId","getPaymentStatus","apiUrl","data","post","subscribe","response","paymentStatus","payment_status","removeItem","i0","ɵɵdirectiveInject","i1","ActivatedRoute","i2","HttpClient","selectors","decls","vars","template","PaymentSuccessComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\josed\\Escritorio\\WebDev\\1 ANGULAR\\frontEcommerceAngular\\src\\app\\components\\payment-success\\payment-success.component.ts","C:\\Users\\josed\\Escritorio\\WebDev\\1 ANGULAR\\frontEcommerceAngular\\src\\app\\components\\payment-success\\payment-success.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-payment-success',\n  templateUrl: './payment-success.component.html',\n  styleUrls: ['./payment-success.component.css']\n})\nexport class PaymentSuccessComponent implements OnInit {\n  sessionId: string | undefined;\n  paymentStatus: string | undefined;\n\n  constructor(private route: ActivatedRoute, private http: HttpClient) { }\n\n  ngOnInit(): void {\n    // this.route.queryParams.subscribe(params => {\n    //   this.sessionId = params['sessionId'];\n    //   if (this.sessionId) {\n    //     this.getPaymentStatus(this.sessionId);\n    //   }\n    // });\n\n    const user = localStorage.getItem(\"username\")\n\n    console.log(user)\n    const sessionId = localStorage.getItem('sessionId');\n\n    if (sessionId) {\n      // El sessionId está presente en el almacenamiento local\n      console.log('Session ID:', sessionId);\n      this.getPaymentStatus(sessionId);\n\n    } else {\n      // El sessionId no está presente en el almacenamiento local\n      console.log('Session ID no encontrado.');\n    }\n  }\n\n  getPaymentStatus(sessionId: string) {\n    const apiUrl = 'http://localhost:8000/api/payments/get-payment-status'; // Cambia la URL según tu configuración\n    const data = { sessionId: sessionId };\n\n    return this.http.post(apiUrl, data).subscribe((response: any) => {\n      this.paymentStatus = response.payment_status;\n      console.log(response)\n      if(response.payment_status === 'paid'){\n        // this.goToSuccesPage()\n        // this.clearCartAfterSuccessfullPurchase()\n        localStorage.removeItem('sessionId');\n      }\n    });\n  }\n}","<p>payment-success works!</p>\n"],"mappings":";;;AAIA,MAKaA,uBAAuB;EAIlCC,YAAoBC,KAAqB,EAAUC,IAAgB;IAA/C,KAAAD,KAAK,GAALA,KAAK;IAA0B,KAAAC,IAAI,GAAJA,IAAI;EAAgB;EAEvEC,QAAQA,CAAA;IACN;IACA;IACA;IACA;IACA;IACA;IAEA,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAE7CC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;IACjB,MAAMK,SAAS,GAAGJ,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAEnD,IAAIG,SAAS,EAAE;MACb;MACAF,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEC,SAAS,CAAC;MACrC,IAAI,CAACC,gBAAgB,CAACD,SAAS,CAAC;KAEjC,MAAM;MACL;MACAF,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;;EAE5C;EAEAE,gBAAgBA,CAACD,SAAiB;IAChC,MAAME,MAAM,GAAG,uDAAuD,CAAC,CAAC;IACxE,MAAMC,IAAI,GAAG;MAAEH,SAAS,EAAEA;IAAS,CAAE;IAErC,OAAO,IAAI,CAACP,IAAI,CAACW,IAAI,CAACF,MAAM,EAAEC,IAAI,CAAC,CAACE,SAAS,CAAEC,QAAa,IAAI;MAC9D,IAAI,CAACC,aAAa,GAAGD,QAAQ,CAACE,cAAc;MAC5CV,OAAO,CAACC,GAAG,CAACO,QAAQ,CAAC;MACrB,IAAGA,QAAQ,CAACE,cAAc,KAAK,MAAM,EAAC;QACpC;QACA;QACAZ,YAAY,CAACa,UAAU,CAAC,WAAW,CAAC;;IAExC,CAAC,CAAC;EACJ;;AA3CWnB,uBAAuB,C;mBAAvBA,uBAAuB,EAAAoB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,UAAA;AAAA;AAAvBzB,uBAAuB,C;QAAvBA,uBAAuB;EAAA0B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,iCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCTpCX,EAAA,CAAAa,cAAA,QAAG;MAAAb,EAAA,CAAAc,MAAA,6BAAsB;MAAAd,EAAA,CAAAe,YAAA,EAAI;;;;;SDShBnC,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}