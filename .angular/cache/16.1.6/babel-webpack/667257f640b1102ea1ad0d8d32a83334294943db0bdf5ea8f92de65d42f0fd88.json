{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nclass CartService {\n  constructor() {\n    this.apiUrl = 'http://localhost:8000/api/purchases/shoppingcart/add';\n    this.shoppingCart = new BehaviorSubject({\n      itemsInShoppingCart: []\n    });\n    this.shoppingCart$ = this.shoppingCart.asObservable();\n    this.currentItems = [];\n    this.shoppingCartAmount = new BehaviorSubject(0);\n    this.shoppingCartAmount$ = this.shoppingCartAmount.asObservable();\n    this.currentAmount = 0;\n    const savedCart = JSON.parse(localStorage.getItem('shoppingCart') ?? '[]');\n    if (savedCart && savedCart.length > 0) {\n      this.currentItems = savedCart;\n      this.shoppingCart.next({\n        itemsInShoppingCart: this.currentItems\n      });\n    }\n    this.amountInShoppingCart();\n  }\n  addToCart(item) {\n    this.currentItems.push(item);\n    localStorage.setItem('shoppingCart', JSON.stringify(this.currentItems));\n    console.log(this.currentItems);\n    const cart = {\n      itemsInShoppingCart: this.currentItems\n    };\n    this.shoppingCart.next(cart);\n    this.amountInShoppingCart();\n  }\n  addToCart2() {\n    const refreshToken = this.authService.getRefreshToken();\n    if (refreshToken) {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${refreshToken}`\n      });\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('productName', product.productName);\n      formData.append('description', product.description);\n      formData.append('totalAmount', product.totalAmount);\n      formData.append('quantity', product.quantity);\n      return this.http.post(`${this.apiUrl}/new-product`, formData, {\n        headers\n      }).pipe(tap(() => {\n        console.log('Producto agregado exitosamente');\n        this.productChangedSubject.next();\n      }));\n    }\n    saveCartInLocal();\n    {\n      localStorage.setItem('shoppingCart', JSON.stringify(this.currentItems));\n      console.log(this.currentItems);\n      const cart = {\n        itemsInShoppingCart: this.currentItems\n      };\n      this.shoppingCart.next(cart);\n    }\n    deleteFromCart(product, any);\n    {\n      this.currentItems = this.currentItems.filter(item => item !== product);\n      this.saveCartInLocal();\n      this.amountInShoppingCart();\n    }\n    amountInShoppingCart();\n    {\n      this.currentAmount = 0;\n      this.currentItems.forEach(resp => {\n        let numbers = Number(resp.totalAmount);\n        console.log(numbers);\n        this.currentAmount += numbers;\n        this.shoppingCartAmount.next(this.currentAmount);\n      });\n    }\n  }\n}\nCartService.ɵfac = function CartService_Factory(t) {\n  return new (t || CartService)();\n};\nCartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CartService,\n  factory: CartService.ɵfac,\n  providedIn: 'root'\n});\nexport { CartService };","map":{"version":3,"names":["BehaviorSubject","CartService","constructor","apiUrl","shoppingCart","itemsInShoppingCart","shoppingCart$","asObservable","currentItems","shoppingCartAmount","shoppingCartAmount$","currentAmount","savedCart","JSON","parse","localStorage","getItem","length","next","amountInShoppingCart","addToCart","item","push","setItem","stringify","console","log","cart","addToCart2","refreshToken","authService","getRefreshToken","headers","HttpHeaders","formData","FormData","append","file","product","productName","description","totalAmount","quantity","http","post","pipe","tap","productChangedSubject","saveCartInLocal","deleteFromCart","any","filter","forEach","resp","numbers","Number","factory","ɵfac","providedIn"],"sources":["C:\\Users\\josed\\Escritorio\\WebDev\\1 ANGULAR\\frontEcommerceAngular\\src\\app\\services\\cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n\n  private apiUrl = 'http://localhost:8000/api/purchases/shoppingcart/add'\n\n\n  constructor() {\n    const savedCart = JSON.parse(localStorage.getItem('shoppingCart') ?? '[]');\n    if (savedCart && savedCart.length > 0) {\n      this.currentItems = savedCart;\n      this.shoppingCart.next({ itemsInShoppingCart: this.currentItems });\n    }\n    this.amountInShoppingCart();\n  }\n\n  private shoppingCart: BehaviorSubject<ShoppingCart> = new BehaviorSubject<ShoppingCart>({ itemsInShoppingCart: [] });\n  shoppingCart$ = this.shoppingCart.asObservable()\n  currentItems: any = [];\n\n  private shoppingCartAmount: BehaviorSubject<any> = new BehaviorSubject<any>(0);\n  shoppingCartAmount$ = this.shoppingCartAmount.asObservable()\n  currentAmount: number = 0\n\n  addToCart(item: any) {\n    this.currentItems.push(item);\n    localStorage.setItem('shoppingCart', JSON.stringify(this.currentItems));\n    console.log(this.currentItems)\n    const cart = { itemsInShoppingCart: this.currentItems };\n    this.shoppingCart.next(cart);\n    this.amountInShoppingCart();\n  }\n\n  addToCart2(){\n    const refreshToken = this.authService.getRefreshToken();\n    if (refreshToken) {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${refreshToken}`\n      });\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('productName', product.productName);\n      formData.append('description', product.description);\n      formData.append('totalAmount', product.totalAmount);\n      formData.append('quantity', product.quantity);\n      return this.http.post<any>(`${this.apiUrl}/new-product`, formData, { headers }).pipe(\n        tap(() => {\n          console.log('Producto agregado exitosamente');\n          this.productChangedSubject.next();\n        }),\n  }\n\n  saveCartInLocal() {\n    localStorage.setItem('shoppingCart', JSON.stringify(this.currentItems));\n    console.log(this.currentItems)\n    const cart = { itemsInShoppingCart: this.currentItems };\n\n    this.shoppingCart.next(cart);\n  }\n\n  deleteFromCart(product: any) {\n    this.currentItems = this.currentItems.filter((item: any) => item !== product);\n    this.saveCartInLocal()\n    this.amountInShoppingCart();\n  }\n\n  amountInShoppingCart() {\n    this.currentAmount = 0;\n    this.currentItems.forEach((resp: any) => {\n      let numbers = Number(resp.totalAmount)\n      console.log(numbers)\n      this.currentAmount += numbers;\n      this.shoppingCartAmount.next(this.currentAmount)\n    })\n  }\n\n}\n\ninterface Item {\n  id: string;\n  productName: string;\n  imges: string;\n  description: string;\n  totalAmount: string;\n  quantity: number;\n}\n\ninterface ShoppingCart {\n  itemsInShoppingCart: Item[];\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}