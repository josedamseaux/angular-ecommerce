{"ast":null,"code":"import jwt_decode from 'jwt-decode';\nimport * as i0 from \"@angular/core\";\nclass JwtService {\n  decodeToken(token) {\n    if (token) {\n      let accesToken = jwt_decode(token);\n      console.log(accesToken);\n      return accesToken;\n    } else {\n      return null;\n    }\n  }\n}\nJwtService.ɵfac = function JwtService_Factory(t) {\n  return new (t || JwtService)();\n};\nJwtService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: JwtService,\n  factory: JwtService.ɵfac,\n  providedIn: 'root'\n});\nexport { JwtService };","map":{"version":3,"names":["jwt_decode","JwtService","decodeToken","token","accesToken","console","log","factory","ɵfac","providedIn"],"sources":["C:\\Users\\josed\\Escritorio\\WebDev\\1 ANGULAR\\frontEcommerceAngular\\src\\app\\services\\jwt.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport jwt_decode from 'jwt-decode';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtService {\n\n  decodeToken(token: string | null){\n    if (token) {\n      let accesToken = jwt_decode<JwtToken>(token)\n      console.log(accesToken)\n      return accesToken\n    }\n    else {\n      return null\n    }\n  }\n}\n\n\ninterface JwtToken {\n  sub: string;\n  username: string;\n  roles: string[];\n}"],"mappings":"AACA,OAAOA,UAAU,MAAM,YAAY;;AAEnC,MAGaC,UAAU;EAErBC,WAAWA,CAACC,KAAoB;IAC9B,IAAIA,KAAK,EAAE;MACT,IAAIC,UAAU,GAAGJ,UAAU,CAAWG,KAAK,CAAC;MAC5CE,OAAO,CAACC,GAAG,CAACF,UAAU,CAAC;MACvB,OAAOA,UAAU;KAClB,MACI;MACH,OAAO,IAAI;;EAEf;;AAXWH,UAAU,C;mBAAVA,UAAU;AAAA;AAAVA,UAAU,C;SAAVA,UAAU;EAAAM,OAAA,EAAVN,UAAU,CAAAO,IAAA;EAAAC,UAAA,EAFT;AAAM;SAEPR,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}