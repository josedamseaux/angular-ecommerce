{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { Subject, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-cookie-service\";\nclass AuthService {\n  constructor(http, cookieService) {\n    this.http = http;\n    this.cookieService = cookieService;\n    this.accessTokenKey = 'access_token';\n    this.refreshTokenKey = 'refresh_token';\n    this.usernameSubject = new Subject();\n    this.username$ = this.usernameSubject.asObservable();\n    this.urlLogin = 'http://localhost:8000/api/auth/login';\n    this.urlRegister = 'http://localhost:8000/api/users/register';\n    this.urlLogout = 'http://localhost:8000/api/auth/logout';\n  }\n  login(user) {\n    return this.http.post(this.urlLogin, user);\n  }\n  register(user) {\n    return this.http.post(this.urlRegister, user);\n  }\n  saveTokens(accessToken, refreshToken) {\n    this.cookieService.set(this.accessTokenKey, accessToken, undefined, '/', undefined, true, 'Strict');\n    this.cookieService.set(this.refreshTokenKey, refreshToken, undefined, '/', undefined, true, 'Strict');\n  }\n  getAccessToken() {\n    return this.cookieService.get(this.accessTokenKey);\n  }\n  getRefreshToken() {\n    return this.cookieService.get(this.refreshTokenKey);\n  }\n  emitUsername(user) {\n    this.usernameSubject.next(user);\n    localStorage.setItem('username', user); // Almacenar en localStorage\n  }\n\n  emitInfo(userInfo) {\n    localStorage.setItem('userInfo', userInfo); // Almacenar en localStorage\n  }\n\n  getUserData(user) {\n    this.usernameSubject.next(user);\n    localStorage.setItem('username', user); // Almacenar en localStorage\n  }\n\n  clearTokens() {\n    this.cookieService.delete(this.accessTokenKey, '/');\n    this.cookieService.delete(this.refreshTokenKey, '/');\n  }\n  logout() {\n    const accessToken = this.cookieService.get(this.refreshTokenKey);\n    localStorage.removeItem('username');\n    if (accessToken) {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${accessToken}`\n      });\n      this.clearTokens();\n      const logout = this.http.get(this.urlLogout, {\n        headers\n      });\n      if (log) ;\n    } else {\n      return throwError(() => new Error('No se encontró el token de acceso'));\n    }\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.CookieService));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthService };","map":{"version":3,"names":["HttpHeaders","Subject","throwError","AuthService","constructor","http","cookieService","accessTokenKey","refreshTokenKey","usernameSubject","username$","asObservable","urlLogin","urlRegister","urlLogout","login","user","post","register","saveTokens","accessToken","refreshToken","set","undefined","getAccessToken","get","getRefreshToken","emitUsername","next","localStorage","setItem","emitInfo","userInfo","getUserData","clearTokens","delete","logout","removeItem","headers","log","Error","i0","ɵɵinject","i1","HttpClient","i2","CookieService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\josed\\Escritorio\\WebDev\\1 ANGULAR\\frontEcommerceAngular\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject, tap, throwError } from 'rxjs';\nimport { CookieService } from 'ngx-cookie-service';\nimport { UserInterface } from '../interfaces/user.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private accessTokenKey = 'access_token';\n  private refreshTokenKey = 'refresh_token';\n\n  private usernameSubject = new Subject<string>();\n\n  username$ = this.usernameSubject.asObservable();\n\n  constructor(private http: HttpClient, private cookieService: CookieService) {}\n  \n  urlLogin = 'http://localhost:8000/api/auth/login';\n  urlRegister = 'http://localhost:8000/api/users/register';\n  urlLogout = 'http://localhost:8000/api/auth/logout';\n  \n  login(user: any): Observable<any> {\n    return this.http.post(this.urlLogin, user);\n  }\n\n  register(user: UserInterface): Observable<any> {\n    return this.http.post(this.urlRegister, user);\n  }\n\n  saveTokens(accessToken: string, refreshToken: string) {\n    this.cookieService.set(this.accessTokenKey, accessToken, undefined, '/', undefined, true, 'Strict');\n    this.cookieService.set(this.refreshTokenKey, refreshToken, undefined, '/', undefined, true, 'Strict');\n  }\n\n  getAccessToken(): string | null {\n    return this.cookieService.get(this.accessTokenKey);\n  }\n\n  getRefreshToken(): string | null {\n    return this.cookieService.get(this.refreshTokenKey);\n  }\n\n  emitUsername(user: any) {\n    this.usernameSubject.next(user);\n    localStorage.setItem('username', user); // Almacenar en localStorage\n  }\n\n  emitInfo(userInfo: any) {\n    localStorage.setItem('userInfo', userInfo); // Almacenar en localStorage\n  }\n\n  getUserData(user: any) {\n    this.usernameSubject.next(user);\n    localStorage.setItem('username', user); // Almacenar en localStorage\n  }\n\n\n  clearTokens() {\n    this.cookieService.delete(this.accessTokenKey, '/');\n    this.cookieService.delete(this.refreshTokenKey, '/');\n  }\n\n  logout() {\n    const accessToken = this.cookieService.get(this.refreshTokenKey);\n    localStorage.removeItem('username');\n    if (accessToken) {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${accessToken}`\n      });\n      this.clearTokens();\n      const logout = this.http.get(this.urlLogout, { headers })\n      if(log)\n    } else {\n      return throwError(() => new Error('No se encontró el token de acceso'));\n    }\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}