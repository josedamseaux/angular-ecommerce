{"ast":null,"code":"import { inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { JwtService } from '../services/jwt.service';\nexport const isAdminGuard = (route, state) => {\n  const jwtService = inject(JwtService);\n  const authService = inject(AuthService);\n  let router = inject(Router);\n  let accessToken = authService.getRefreshToken();\n  let decodedToken = jwtService.decodeToken(accessToken);\n  if (accessToken && decodedToken?.username === 'adminuser') {\n    return true;\n  } else {\n    router.navigateByUrl('/not-found');\n    return false;\n  }\n};","map":{"version":3,"names":["inject","Router","AuthService","JwtService","isAdminGuard","route","state","jwtService","authService","router","accessToken","getRefreshToken","decodedToken","decodeToken","username","navigateByUrl"],"sources":["C:\\Users\\josed\\Escritorio\\WebDev\\1 ANGULAR\\frontEcommerceAngular\\src\\app\\guards\\isadmin.guard.ts"],"sourcesContent":["import { inject } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\nimport { JwtService } from '../services/jwt.service';\n\nexport const isAdminGuard: CanActivateFn = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree => {\n\n  const jwtService = inject(JwtService);\n  const authService = inject(AuthService);\n  let router = inject(Router)\n\n  let accessToken = authService.getRefreshToken()\n  let decodedToken = jwtService.decodeToken(accessToken)\n\n  if(accessToken && decodedToken?.username === 'adminuser'){\n    return true\n  } else {\n    router.navigateByUrl('/not-found')\n    return false\n  }\n\n}"],"mappings":"AAAA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAAgDC,MAAM,QAAsC,iBAAiB;AAE7G,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,UAAU,QAAQ,yBAAyB;AAEpD,OAAO,MAAMC,YAAY,GAAkBA,CACzCC,KAA6B,EAC7BC,KAA0B,KACwD;EAElF,MAAMC,UAAU,GAAGP,MAAM,CAACG,UAAU,CAAC;EACrC,MAAMK,WAAW,GAAGR,MAAM,CAACE,WAAW,CAAC;EACvC,IAAIO,MAAM,GAAGT,MAAM,CAACC,MAAM,CAAC;EAE3B,IAAIS,WAAW,GAAGF,WAAW,CAACG,eAAe,EAAE;EAC/C,IAAIC,YAAY,GAAGL,UAAU,CAACM,WAAW,CAACH,WAAW,CAAC;EAEtD,IAAGA,WAAW,IAAIE,YAAY,EAAEE,QAAQ,KAAK,WAAW,EAAC;IACvD,OAAO,IAAI;GACZ,MAAM;IACLL,MAAM,CAACM,aAAa,CAAC,YAAY,CAAC;IAClC,OAAO,KAAK;;AAGhB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}