{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\nclass CartService {\n  constructor(http, authService) {\n    this.http = http;\n    this.authService = authService;\n    this.apiUrl = 'http://localhost:8000/api/purchases/shoppingcart';\n    this.shoppingCart = new BehaviorSubject({\n      itemsInShoppingCart: []\n    });\n    this.shoppingCart$ = this.shoppingCart.asObservable();\n    this.currentItems = [];\n    this.shoppingCartAmount = new BehaviorSubject(0);\n    this.shoppingCartAmount$ = this.shoppingCartAmount.asObservable();\n    this.currentAmount = 0;\n    const savedCart = JSON.parse(localStorage.getItem('shoppingCart') ?? '[]');\n    if (savedCart && savedCart.length > 0) {\n      this.currentItems = savedCart;\n      this.shoppingCart.next({\n        itemsInShoppingCart: this.currentItems\n      });\n    }\n  }\n  getItemsFromShoppingCart() {\n    const refreshToken = this.authService.getRefreshToken();\n    if (refreshToken) {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${refreshToken}`\n      });\n      return this.http.get(`${this.apiUrl}/get-items-from-cart`, {\n        headers\n      });\n    }\n    return null;\n  }\n  addToCart2(itemId) {\n    const refreshToken = this.authService.getRefreshToken();\n    if (refreshToken) {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${refreshToken}`\n      });\n      // let id: any = []\n      // id.push(item.id)\n      // console.log(id)\n      return this.http.post(`${this.apiUrl}/add`, {\n        items: itemId\n      }, {\n        headers\n      }).subscribe(data => {\n        console.log(data);\n      });\n    }\n    return null;\n  }\n  saveCartInLocal() {\n    localStorage.setItem('shoppingCart', JSON.stringify(this.currentItems));\n    console.log(this.currentItems);\n    const cart = {\n      itemsInShoppingCart: this.currentItems\n    };\n    this.shoppingCart.next(cart);\n  }\n  deleteFromCart(product) {\n    this.currentItems = this.currentItems.filter(item => item !== product);\n    this.saveCartInLocal();\n    this.amountInShoppingCart();\n  }\n  amountInShoppingCart() {\n    this.currentAmount = 0;\n    this.currentItems.forEach(resp => {\n      let numbers = Number(resp.totalAmount);\n      console.log(numbers);\n      this.currentAmount += numbers;\n      this.shoppingCartAmount.next(this.currentAmount);\n    });\n  }\n}\nCartService.ɵfac = function CartService_Factory(t) {\n  return new (t || CartService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n};\nCartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CartService,\n  factory: CartService.ɵfac,\n  providedIn: 'root'\n});\nexport { CartService };","map":{"version":3,"names":["BehaviorSubject","HttpHeaders","CartService","constructor","http","authService","apiUrl","shoppingCart","itemsInShoppingCart","shoppingCart$","asObservable","currentItems","shoppingCartAmount","shoppingCartAmount$","currentAmount","savedCart","JSON","parse","localStorage","getItem","length","next","getItemsFromShoppingCart","refreshToken","getRefreshToken","headers","get","addToCart2","itemId","post","items","subscribe","data","console","log","saveCartInLocal","setItem","stringify","cart","deleteFromCart","product","filter","item","amountInShoppingCart","forEach","resp","numbers","Number","totalAmount","i0","ɵɵinject","i1","HttpClient","i2","AuthService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\josed\\Escritorio\\WebDev\\1 ANGULAR\\frontEcommerceAngular\\src\\app\\services\\cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, tap } from 'rxjs';\nimport { AuthService } from './auth.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n\n  private apiUrl = 'http://localhost:8000/api/purchases/shoppingcart'\n\n\n  constructor(private http: HttpClient, private authService: AuthService) {\n    const savedCart = JSON.parse(localStorage.getItem('shoppingCart') ?? '[]');\n    if (savedCart && savedCart.length > 0) {\n      this.currentItems = savedCart;\n      this.shoppingCart.next({ itemsInShoppingCart: this.currentItems });\n    }\n  }\n\n  private shoppingCart: BehaviorSubject<ShoppingCart> = new BehaviorSubject<ShoppingCart>({ itemsInShoppingCart: [] });\n  shoppingCart$ = this.shoppingCart.asObservable()\n  currentItems: any = [];\n\n  private shoppingCartAmount: BehaviorSubject<any> = new BehaviorSubject<any>(0);\n  shoppingCartAmount$ = this.shoppingCartAmount.asObservable()\n  currentAmount: number = 0\n\n  getItemsFromShoppingCart() {\n    const refreshToken = this.authService.getRefreshToken();\n    if (refreshToken) {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${refreshToken}`\n      });\n      return this.http.get<any>(`${this.apiUrl}/get-items-from-cart`, { headers })\n    }\n    return null\n  }\n\n  addToCart2(itemId: any) {\n    const refreshToken = this.authService.getRefreshToken();\n    if (refreshToken) {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${refreshToken}`\n      });\n\n      // let id: any = []\n      // id.push(item.id)\n      // console.log(id)\n\n      return this.http.post<any>(`${this.apiUrl}/add`, { items: itemId }, { headers }).subscribe(data => {\n        console.log(data)\n      })\n    }\n\n    return null\n  }\n\n  saveCartInLocal() {\n    localStorage.setItem('shoppingCart', JSON.stringify(this.currentItems));\n    console.log(this.currentItems)\n    const cart = { itemsInShoppingCart: this.currentItems };\n\n    this.shoppingCart.next(cart);\n  }\n\n  deleteFromCart(product: any) {\n    this.currentItems = this.currentItems.filter((item: any) => item !== product);\n    this.saveCartInLocal()\n    this.amountInShoppingCart();\n  }\n\n  amountInShoppingCart() {\n    this.currentAmount = 0;\n    this.currentItems.forEach((resp: any) => {\n      let numbers = Number(resp.totalAmount)\n      console.log(numbers)\n      this.currentAmount += numbers;\n      this.shoppingCartAmount.next(this.currentAmount)\n    })\n  }\n\n}\n\ninterface Item {\n  id: string;\n  productName: string;\n  imges: string;\n  description: string;\n  totalAmount: string;\n  quantity: number;\n}\n\ninterface ShoppingCart {\n  itemsInShoppingCart: Item[];\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}