{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nclass PaymentSuccessComponent {\n  constructor(route, http) {\n    this.route = route;\n    this.http = http;\n  }\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      this.sessionId = params['sessionId'];\n      if (this.sessionId) {\n        this.getPaymentStatus(this.sessionId);\n      }\n    });\n  }\n  getPaymentStatus(sessionId) {\n    const apiUrl = 'http://localhost:3000/payments/get-payment-status'; // Cambia la URL según tu configuración\n    const data = {\n      sessionId: sessionId\n    };\n    this.http.post(apiUrl, data).subscribe(response => {\n      this.paymentStatus = response.payment_status;\n    });\n  }\n}\nPaymentSuccessComponent.ɵfac = function PaymentSuccessComponent_Factory(t) {\n  return new (t || PaymentSuccessComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.HttpClient));\n};\nPaymentSuccessComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PaymentSuccessComponent,\n  selectors: [[\"app-payment-success\"]],\n  decls: 2,\n  vars: 0,\n  template: function PaymentSuccessComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"payment-success works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { PaymentSuccessComponent };","map":{"version":3,"names":["PaymentSuccessComponent","constructor","route","http","ngOnInit","queryParams","subscribe","params","sessionId","getPaymentStatus","apiUrl","data","post","response","paymentStatus","payment_status","i0","ɵɵdirectiveInject","i1","ActivatedRoute","i2","HttpClient","selectors","decls","vars","template","PaymentSuccessComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\josed\\Escritorio\\WebDev\\1 ANGULAR\\frontEcommerceAngular\\src\\app\\components\\payment-success\\payment-success.component.ts","C:\\Users\\josed\\Escritorio\\WebDev\\1 ANGULAR\\frontEcommerceAngular\\src\\app\\components\\payment-success\\payment-success.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-payment-success',\n  templateUrl: './payment-success.component.html',\n  styleUrls: ['./payment-success.component.css']\n})\nexport class PaymentSuccessComponent implements OnInit {\n  sessionId: string;\n  paymentStatus: string;\n\n  constructor(private route: ActivatedRoute, private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(params => {\n      this.sessionId = params['sessionId'];\n\n      if (this.sessionId) {\n        this.getPaymentStatus(this.sessionId);\n      }\n    });\n  }\n\n  getPaymentStatus(sessionId: string): void {\n    const apiUrl = 'http://localhost:3000/payments/get-payment-status'; // Cambia la URL según tu configuración\n    const data = { sessionId: sessionId };\n\n    this.http.post(apiUrl, data).subscribe((response: any) => {\n      this.paymentStatus = response.payment_status;\n    });\n  }\n}","<p>payment-success works!</p>\n"],"mappings":";;;AAIA,MAKaA,uBAAuB;EAIlCC,YAAoBC,KAAqB,EAAUC,IAAgB;IAA/C,KAAAD,KAAK,GAALA,KAAK;IAA0B,KAAAC,IAAI,GAAJA,IAAI;EAAgB;EAEvEC,QAAQA,CAAA;IACN,IAAI,CAACF,KAAK,CAACG,WAAW,CAACC,SAAS,CAACC,MAAM,IAAG;MACxC,IAAI,CAACC,SAAS,GAAGD,MAAM,CAAC,WAAW,CAAC;MAEpC,IAAI,IAAI,CAACC,SAAS,EAAE;QAClB,IAAI,CAACC,gBAAgB,CAAC,IAAI,CAACD,SAAS,CAAC;;IAEzC,CAAC,CAAC;EACJ;EAEAC,gBAAgBA,CAACD,SAAiB;IAChC,MAAME,MAAM,GAAG,mDAAmD,CAAC,CAAC;IACpE,MAAMC,IAAI,GAAG;MAAEH,SAAS,EAAEA;IAAS,CAAE;IAErC,IAAI,CAACL,IAAI,CAACS,IAAI,CAACF,MAAM,EAAEC,IAAI,CAAC,CAACL,SAAS,CAAEO,QAAa,IAAI;MACvD,IAAI,CAACC,aAAa,GAAGD,QAAQ,CAACE,cAAc;IAC9C,CAAC,CAAC;EACJ;;AAvBWf,uBAAuB,C;mBAAvBA,uBAAuB,EAAAgB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,UAAA;AAAA;AAAvBrB,uBAAuB,C;QAAvBA,uBAAuB;EAAAsB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,iCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCTpCX,EAAA,CAAAa,cAAA,QAAG;MAAAb,EAAA,CAAAc,MAAA,6BAAsB;MAAAd,EAAA,CAAAe,YAAA,EAAI;;;;;SDShB/B,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}